{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/pages/Header.js","components/UI_Elements/MovieControls.js","components/UI_Elements/MovieCard.js","components/pages/Watchlist.js","components/pages/Watched.js","components/UI_Elements/ResultCard.js","components/pages/Add.js","components/UI_Elements/StarRating.js","components/UI_Elements/MovieCardSpecial.js","components/UI_Elements/Comments.js","components/UI_Elements/CommentForm.js","components/utils/calculateAverage.js","components/pages/Movie.js","components/pages/404.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","watchlist","payload","filter","movie","id","watched","console","log","comments","initialState","localStorage","getItem","JSON","parse","GlobalContext","createContext","GlobalProvider","props","useReducer","AppReducer","dispatch","useEffect","setItem","stringify","Provider","value","addMovieToWatchlist","removeMovieFromWatchlist","addMovieToWatched","removeFromWatched","moveToWatchlist","addCommentToMovies","comment","children","Header","className","to","MovieControls","useContext","onClick","aria-hidden","MovieCard","poster_path","src","alt","title","Watchlist","length","map","key","Watched","ResultCard","storedMovie","find","el","storedMovieWatched","watchlistDisabled","watchedDisabled","release_date","substring","disabled","Add","useState","searchText","setSearchTet","results","setResults","placeholder","onChange","e","preventDefault","target","fetch","then","res","json","data","errors","StarRating","size","color","rest","settings","count","activeColor","a11y","isHalf","emptyIcon","halfIcon","filledIcon","average","visibility","setVisibility","overview","Fragment","style","backgroundImage","edit","Comments","index","name","date","rating","initialFormState","CommentForm","setComments","setVisible","movieId","useParams","Date","toLocaleDateString","commentToForward","setCommentToForward","formState","setFormState","setDisabled","handleChange","onSubmit","for","height","calculateAverage","movieComments","totalRates","reduce","acc","cur","Math","round","Movie","formVisible","setFormVisible","selectedMovie","concat","toString","NotFound","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2c025fd0.chunk.js","sourcesContent":["export default (state, action) => {\n  switch (action.type) {\n    case \"ADD_MOVIE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n      };\n    case \"REMOVE_MOVIE_FROM_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload\n        ),\n      };\n    case \"ADD_MOVIE_TO_WATCHED\":\n      return {\n        ...state,\n        watchlist: state.watchlist.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n        watched: [action.payload, ...state.watched],\n      };\n    case \"REMOVE_MOVIE_FROM_WATCHED\":\n      return {\n        ...state,\n        watched: state.watched.filter((movie) => movie.id !== action.payload),\n      };\n    case \"MOVE_TO_WATCHLIST\":\n      return {\n        ...state,\n        watchlist: [action.payload, ...state.watchlist],\n        watched: state.watched.filter(\n          (movie) => movie.id !== action.payload.id\n        ),\n      };\n    case \"ADD_COMMENT_TO_MOVIES\":\n      console.log(\"payload\", action.payload);\n      return {\n        ...state,\n        comments: [action.payload, ...state.comments],\n      };\n    default:\n      return state;\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport AppReducer from \"./AppReducer\";\n\n/********** Delete the codes below ***********/\n\n// import { useHttpClient } from \"../components/hooks/http-hook\";\n// const { isLoading, error, sendRequest, clearError } = useHttpClient();\n// useEffect(() => {\n//   const fetchMovies = async () => {\n//     try {\n//       console.log(process.env.REACT_APP_BACKEND_URL);\n//       const responseData = await sendRequest(\n//         `${process.env.REACT_APP_BACKEND_URL}/movies`\n//       );\n//       addMovieToWatched(responseData);\n//     } catch (err) {}\n//   };\n//   fetchMovies();\n// }, [sendRequest]);\n\n//initial State\nconst initialState = {\n  watchlist: localStorage.getItem(\"watchlist\")\n    ? JSON.parse(localStorage.getItem(\"watchlist\"))\n    : [],\n  watched: localStorage.getItem(\"watched\")\n    ? JSON.parse(localStorage.getItem(\"watched\"))\n    : [],\n  comments: localStorage.getItem(\"comments\")\n    ? JSON.parse(localStorage.getItem(\"comments\"))\n    : [],\n};\n\n// create context\nexport const GlobalContext = createContext(initialState);\n\n// provide context\nexport const GlobalProvider = (props) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"watchlist\", JSON.stringify(state.watchlist));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n    localStorage.setItem(\"comments\", JSON.stringify(state.comments));\n  }, [state]);\n\n  //actions\n  const addMovieToWatchlist = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeMovieFromWatchlist = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\n  };\n\n  const addMovieToWatched = (movie) => {\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\n  };\n\n  const removeFromWatched = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHED\", payload: id });\n  };\n\n  const moveToWatchlist = (movie) => {\n    dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const addCommentToMovies = (comment) => {\n    dispatch({ type: \"ADD_COMMENT_TO_MOVIES\", payload: comment });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        watchlist: state.watchlist,\n        watched: state.watched,\n        addMovieToWatchlist,\n        removeMovieFromWatchlist,\n        addMovieToWatched,\n        removeFromWatched,\n        moveToWatchlist,\n        addCommentToMovies,\n      }}\n    >\n      {props.children}\n    </GlobalContext.Provider>\n  );\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport const Header = () => {\n  return (\n    <header>\n      <div className=\"container\">\n        <div className=\"inner-content\">\n          <div className=\"brand\">\n            <Link to=\"/\"> WatchList</Link>\n          </div>\n\n          <ul className=\"nav-links\">\n            <li>\n              <Link to=\"/\">WatchList</Link>\n            </li>\n            <li>\n              <Link to=\"/watched\">Watched</Link>\n            </li>\n            <li>\n              <Link to=\"/add\" className=\"btn\">\n                Add\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieControls = ({ type, movie }) => {\n  const {\n    removeMovieFromWatchlist,\n    addMovieToWatched,\n    moveToWatchlist,\n    removeFromWatched,\n  } = useContext(GlobalContext);\n\n  return (\n    <div className=\"inner-card-controls\">\n      {type === \"watchlist\" && (\n        <>\n          <button className=\"ctrl-btn\" onClick={() => addMovieToWatched(movie)}>\n            <i className=\"fa-fw far fa-eye\"></i>\n          </button>\n\n          <button\n            className=\"ctrl-btn\"\n            onClick={() => removeMovieFromWatchlist(movie.id)}\n          >\n            <i className=\"fa-fw fa fa-times\"></i>\n          </button>\n          <button className=\"ctrl-btn\">\n            <Link to={`/watchlist/${movie.id}`}>\n              <i className=\"fa fa-info-circle\"> </i>\n            </Link>\n          </button>\n        </>\n      )}\n\n      {type === \"watched\" && (\n        <>\n          <button className=\"ctrl-btn\" onClick={() => moveToWatchlist(movie)}>\n            <i className=\"fa-fw far fa-eye-slash\"></i>\n          </button>\n\n          <button\n            className=\"ctrl-btn\"\n            onClick={() => removeFromWatched(movie.id)}\n          >\n            <i className=\"fa-fw fa fa-times\" aria-hidden=\"true\"></i>\n          </button>\n          <button className=\"ctrl-btn\">\n            <Link to={`/wacthed/${movie.id}`}>\n              <i className=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n            </Link>\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { MovieControls } from \"./MovieControls\";\n\nexport const MovieCard = ({ movie, type }) => {\n  return (\n    <div className=\"movie-card\">\n      <div className=\"overlay\"></div>\n      {movie.poster_path ? (\n        <img\n          src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n          alt={`${movie.title} Poster`}\n        />\n      ) : (\n        <div className=\"filler-poster\"></div>\n      )}\n      <MovieControls type={type} movie={movie} />\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { MovieCard } from \"../UI_Elements/MovieCard\";\n\nexport const Watchlist = () => {\n  const { watchlist } = useContext(GlobalContext);\n\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">My Watchlist</h1>\n\n          <span className=\"count-pill\">\n            {watchlist.length} {watchlist.length === 1 ? \"Movie\" : \"Movies\"}\n          </span>\n        </div>\n\n        {watchlist.length > 0 ? (\n          <div className=\"movie-grid\">\n            {watchlist.map((movie) => (\n              <MovieCard movie={movie} key={movie.id} type=\"watchlist\" />\n            ))}\n          </div>\n        ) : (\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { MovieCard } from \"../UI_Elements/MovieCard\";\n\nexport const Watched = () => {\n  const { watched } = useContext(GlobalContext);\n  return (\n    <div className=\"movie-page\">\n      <div className=\"container\">\n        <div className=\"header\">\n          <h1 className=\"heading\">Watched Movies</h1>\n\n          <span className=\"count-pill\">\n            {watched.length} {watched.length === 1 ? \"Movie\" : \"Movies\"}\n          </span>\n        </div>\n\n        {watched.length > 0 ? (\n          <div className=\"movie-grid\">\n            {watched.map((movie) => (\n              <MovieCard movie={movie} key={movie.id} type=\"watched\" />\n            ))}\n          </div>\n        ) : (\n          <h2 className=\"no-movies\">No movies in your list! Add some!</h2>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nexport const ResultCard = ({ movie }) => {\n  const {\n    addMovieToWatchlist,\n    addMovieToWatched,\n    watchlist,\n    watched,\n  } = useContext(GlobalContext);\n\n  let storedMovie = watchlist.find((el) => el.id === movie.id);\n  let storedMovieWatched = watched.find((el) => el.id === movie.id);\n\n  const watchlistDisabled = storedMovie\n    ? true\n    : storedMovieWatched\n    ? true\n    : false;\n\n  const watchedDisabled = storedMovieWatched ? true : false;\n\n  return (\n    <div className=\"result-card\">\n      <div className=\"poster-wrapper\">\n        {movie.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n            alt={`${movie.title} Poster`}\n          />\n        ) : (\n          <div className=\"filler-poster\"></div>\n        )}\n      </div>\n       \n      <div className=\"info\">\n        <div className=\"header\">\n          <h3 className=\"title\">{movie.title}</h3>\n          <h4 className=\"release-date\">\n            {movie.release_date ? movie.release_date.substring(0, 4) : \"-\"}\n          </h4>\n        </div>\n\n        <div className=\"controls\">\n          <button\n            className=\"btn\"\n            disabled={watchlistDisabled}\n            onClick={() => addMovieToWatchlist(movie)}\n          >\n            Add to Wacthlist\n          </button>\n          <button\n            className=\"btn\"\n            disabled={watchedDisabled}\n            onClick={() => addMovieToWatched(movie)}\n          >\n            Add to Watched\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\n\nimport { ResultCard } from \"../UI_Elements/ResultCard\";\n\nexport const Add = () => {\n  const [searchText, setSearchTet] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  const onChange = (e) => {\n    e.preventDefault();\n\n    setSearchTet(e.target.value);\n\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=9c443d139a8d7c65a0c155d19fa3bc19&language=en-US&page=1&include_adult=false&query=${e.target.value}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"add \", data);\n        if (!data.errors) {\n          setResults(data.results);\n        } else {\n          setResults([]);\n        }\n      });\n  };\n  return (\n    <div className=\"add-page\">\n      <div className=\"container\">\n        <div className=\"add-content\">\n          <div className=\"input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Search for a movie\"\n              value={searchText}\n              onChange={onChange}\n            />\n          </div>\n          {results.length > 0 && (\n            <ul className=\"results\">\n              {results.map((movie) => (\n                <li key={movie.id}>\n                  <ResultCard movie={movie} />\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactStars from \"react-rating-stars-component\";\n\nconst StarRating = ({ value, size, color, ...rest }) => {\n  const settings = {\n    size,\n    count: 5,\n    color: \"red\",\n    activeColor: color,\n    value: value,\n    a11y: true,\n    isHalf: true,\n    emptyIcon: <i className=\"far fa-star\" />,\n    halfIcon: <i className=\"fa fa-star-half-alt\" />,\n    filledIcon: <i className=\"fa fa-star\" />,\n  };\n  return (\n    <div>\n      <ReactStars {...settings} {...rest} />\n    </div>\n  );\n};\n\nexport default StarRating;\n","import React, { useEffect, useState } from \"react\";\n\nimport StarRating from \"./StarRating\";\nimport \"./movieCard.css\";\n\nconst MovieCard = ({ movie, average, visibility, setVisibility }) => {\n  const { title, overview, poster_path } = movie;\n\n  console.log(\"average movieCard Special\", average);\n  return (\n    <React.Fragment>\n      <div className=\"container__movie-card\">\n        <div className=\"movie\">\n          <div\n            className=\"movie-img\"\n            style={{\n              backgroundImage: `url(https://image.tmdb.org/t/p/w200${poster_path})`,\n            }}\n          ></div>\n          <div className=\"text-movie-cont\">\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <h1>{title}</h1>\n              </div>\n            </div>\n            <div className=\"mr-grid summary-row\">\n              <div className=\"col2\">\n                <h5>SUMMARY</h5>\n              </div>\n            </div>\n            <div className=\"mr-grid\">\n              <div className=\"col1\">\n                <p className=\"movie-description\">{overview}</p>\n                <div>\n                  <StarRating\n                    value={average}\n                    edit={false}\n                    size={35}\n                    isHalf={true}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"btn__form_visible\">\n        <button className=\"btn\" onClick={() => setVisibility(!visibility)}>\n          {visibility ? \"Cancel\" : \"Please Rate and Write a Comment\"}\n        </button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default MovieCard;\n","import React from \"react\";\n\nimport StarRating from \"./StarRating\";\nimport \"./comments.css\";\n\nconst Comments = ({ comments }) => {\n  return (\n    <div>\n      <h3 className=\"comment__header\">Comments And Ratings</h3>\n      {comments !== null &&\n        comments.map(({ comment, name, date, rating }, index) => (\n          <div className={\"comment\"} key={index}>\n            <div className=\"comment__details\">\n              <div className=\"comment__author\">{name}</div>\n              <p className=\"comment__date\">{date}</p>\n              <StarRating value={rating} edit={false} size={18} />\n            </div>\n\n            <p className=\"comment__text\">{comment}</p>\n            <hr />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default Comments;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./commentForm.css\";\nimport StarRating from \"./StarRating\";\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nconst initialFormState = {\n  name: \"\",\n  comment: \"\",\n  rating: 0,\n};\n\nconst CommentForm = ({ setComments, setVisible, comments }) => {\n  const { movieId } = useParams();\n  const { addCommentToMovies } = useContext(GlobalContext);\n  const [commentToForward, setCommentToForward] = useState({\n    name: \"\",\n    comment: \"\",\n    rating: 0,\n    date: new Date().toLocaleDateString(\"en-US\"),\n    movieId: movieId,\n  });\n  const [formState, setFormState] = useState(initialFormState);\n  const [disabled, setDisabled] = useState(true);\n\n  const { name, comment, rating } = formState;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setComments([commentToForward, ...comments]);\n    setVisible(false);\n    setFormState(initialFormState);\n    addCommentToMovies(commentToForward);\n  }\n\n  function handleChange(e) {\n    setFormState({ ...formState, [e.target.name]: e.target.value });\n    setCommentToForward({\n      ...commentToForward,\n      [e.target.name]: e.target.value,\n    });\n    console.log(\"handle change\", commentToForward.rating);\n  }\n\n  useEffect(() => {\n    if (comment.length > 3 && rating > 0 && name !== \"\") setDisabled(false);\n    else setDisabled(true);\n  }, [name, rating, comment]);\n\n  return (\n    <div className=\"container__form\">\n      <div>\n        <StarRating\n          onChange={(rating) => {\n            setFormState({ ...formState, rating: rating });\n            setCommentToForward({\n              ...commentToForward,\n              rating: rating,\n            });\n          }}\n          value={formState.rating}\n          size={25}\n        />\n      </div>\n      <form onSubmit={handleSubmit}>\n        <label for=\"name\">First Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          placeholder=\"Your name..\"\n          value={formState.name}\n          onChange={handleChange}\n        />\n\n        <label for=\"comment\">Comment</label>\n        <textarea\n          id=\"subject\"\n          name=\"comment\"\n          placeholder=\"Write your comment about the movie here..\"\n          style={{ height: \"200px\" }}\n          value={formState.comment}\n          onChange={handleChange}\n        />\n\n        <button disabled={disabled} type=\"submit\" className=\"btn\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentForm;\n","export const calculateAverage = (comments, movieId) => {\n  const movieComments = comments.filter(\n    (comment) => comment.movieId === movieId\n  );\n  console.log(comments);\n  console.log(\"movieComments\", movieComments);\n  const totalRates = movieComments.reduce((acc, cur) => {\n    return acc + cur.rating;\n  }, 0);\n  console.log(Math.round((totalRates / movieComments.length) * 10) / 10);\n  return movieComments.length === 0\n    ? 0\n    : Math.round((totalRates / movieComments.length) * 10) / 10;\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { GlobalContext } from \"../../context/GlobalState\";\n\nimport MovieCard from \"../UI_Elements/MovieCardSpecial\";\nimport Comments from \"../UI_Elements/Comments\";\nimport CommentForm from \"../UI_Elements/CommentForm\";\nimport { calculateAverage } from \"../utils/calculateAverage\";\n\nexport const Movie = () => {\n  const { watched, watchlist } = useContext(GlobalContext);\n  const { movieId } = useParams();\n  const [formVisible, setFormVisible] = useState(false);\n  const [comments, setComments] = useState(\n    JSON.parse(localStorage.getItem(\"comments\")).filter(\n      (comment) => comment.movieId === movieId\n    )\n  );\n\n  let movies = watchlist.concat(watched);\n  let selectedMovie = movies.find((movie) => movie.id.toString() === movieId);\n\n  return (\n    <div className=\"movie-container\">\n      <div className=\"movie-container__movie-card\">\n        <MovieCard\n          movie={selectedMovie}\n          average={calculateAverage(comments, movieId)}\n          visibility={formVisible}\n          setVisibility={setFormVisible}\n        />\n      </div>\n      <div className=\"movie-container__comment-form\">\n        {formVisible && (\n          <CommentForm\n            setComments={setComments}\n            comments={comments}\n            setVisible={setFormVisible}\n          />\n        )}\n      </div>\n      <div className=\"movie-container__comments\">\n        <Comments comments={comments} />\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"flex h-screen\">\n      <h1 className=\"text-4xl m-auto\">Page Not Found</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport { Header } from \"./components/pages/Header\";\nimport { Watchlist } from \"./components/pages/Watchlist\";\nimport { Watched } from \"./components/pages/Watched\";\nimport { Add } from \"./components/pages/Add\";\nimport { Movie } from \"./components/pages/Movie\";\n\nimport NotFound from \"./components/pages/404\";\nimport \"./App.css\";\n\nimport \"./lib/font-awesome/css/all.min.css\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact>\n            <Watchlist />\n          </Route>\n          <Route path=\"/watchlist\" exact>\n            <Watchlist />\n          </Route>\n          <Route path=\"/watched\" exact>\n            <Watched />\n          </Route>\n          <Route path=\"/add\" exact>\n            <Add />\n          </Route>\n\n          <Route path=\"/:listName/:movieId\" exact>\n            <Movie />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}